#!/usr/bin/env python3
"""
Usage:
    get_prompt_strings [-v] [-h]

Get prompt strings.

Options:
  -v, --version  Show version info and exit.
  -h, --help     Show help message and exit.
"""

# Define version.
__version__ = "2025.04.23"

# Import standard libraries.
import argparse
import datetime
import enum
import os


#---------------------------------------------------------------------------------------------------
# Utility functions and classes
#---------------------------------------------------------------------------------------------------

class Color(enum.StrEnum):
    """
    ANSI Escape sequence for colors.
    """
    RED    = "\x1B[38;2;204;102;102m"
    GREEN  = "\x1B[38;2;181;189;104m"
    YELLOW = "\x1B[38;2;240;198;116m"
    BLUE   = "\x1B[38;2;129;162;190m"
    PURPLE = "\x1B[38;2;178;148;187m"
    CYAN   = "\x1B[38;2;138;190;183m"
    GRAY   = "\x1B[38;2;197;200;198m"
    NONE   = "\x1B[0m"


#---------------------------------------------------------------------------------------------------
# Print PS0 function
#---------------------------------------------------------------------------------------------------

def get_prompt_strings():
    """
    Print prompt strings to STDOUT.
    """
    # Get the current time.
    now = datetime.datetime.now()

    # Get necessary variables.
    user = os.getenv("LOGNAME")
    host = os.getenv("NAME")
    date = now.strftime("%Y/%m/%d")
    time = now.strftime("%H:%M:%S")
    cdir = os.getcwd()

    # Compute PS0.
    ps0  = Color.RED    + user + Color.GRAY + " : "
    ps0 += Color.GREEN  + host + Color.GRAY + " : "
    ps0 += Color.YELLOW + date + Color.GRAY + " : "
    ps0 += Color.BLUE   + time + Color.GRAY + " : "
    ps0 += Color.PURPLE + cdir + Color.NONE

    # Compute PS1 for insert and normal mode.
    ps1i = "=>> "
    ps1n = "<<= "

    # Compute PS3.
    ps2 = "... "

    print(ps0)
    print(ps1i)
    print(ps1n)
    print(ps2)


#---------------------------------------------------------------------------------------------------
# Main function of this script
#---------------------------------------------------------------------------------------------------

def parse_args() -> argparse.Namespace:
    """
    Parse command line arguments.

    Returns:
        (argparse.Namespace): Parsed command line arguments.
    """
    parser = argparse.ArgumentParser(prog="welcome", add_help=False)
    parser.add_argument("-v", "--version", action="store_true")
    parser.add_argument("-h", "--help", action="store_true")
    return parser.parse_args()


def main(args: argparse.Namespace) -> None:
    """
    Entrypoint of this script.

    Args:
        args (argparse.Namespace): Parsed command line arguments.
    """
    if args.version:
        print("get_prompt_strings", __version__)
        print("Copyright (C) Tetsuya Ishikawa")
        print("This software is released under the MIT License")

    elif args.help:
        print(__doc__.strip())

    else:
        get_prompt_strings()


if __name__ == "__main__":
    main(parse_args())


# vim: expandtab tabstop=4 shiftwidth=4 fdm=marker

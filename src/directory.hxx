////////////////////////////////////////////////////////////////////////////////////////////////////
// C++ source file: directory.cxx
//
// This file defines the class `Directory` which manages directory.
////////////////////////////////////////////////////////////////////////////////////////////////////

#ifndef DIRECTORY_HXX
#define DIRECTORY_HXX

#include <filesystem>
#include <vector>

////////////////////////////////////////////////////////////////////////////////////////////////////
// Define constants
////////////////////////////////////////////////////////////////////////////////////////////////////

#define DIRECTORY_NO_ITEM ("NO FILES/DIRECTORIES FOUND")

////////////////////////////////////////////////////////////////////////////////////////////////////
// CursesScreen: A class for Curses stdscr
////////////////////////////////////////////////////////////////////////////////////////////////////
class Directory : public std::vector<std::string>
{
    public:

        ////////////////////////////////////////////////////////////////////////////////////////////
        // Constructors
        ////////////////////////////////////////////////////////////////////////////////////////////

        Directory(void);

        ////////////////////////////////////////////////////////////////////////////////////////////
        // Getter and setter functions
        ////////////////////////////////////////////////////////////////////////////////////////////

        // Get path of the current directoy.
        const std::filesystem::path&
        get(void)
        const noexcept;

        // Get full path of index-th item.
        std::filesystem::path
        get_relative(const uint32_t index, const std::filesystem::path& root)
        const noexcept;

        // Set path.
        void
        set(const std::filesystem::path& path)
        noexcept;

        ////////////////////////////////////////////////////////////////////////////////////////////
        // Member functions
        ////////////////////////////////////////////////////////////////////////////////////////////

        // Append to the path and move to it.
        bool
        append(const std::string& name)
        noexcept;

        // Get color of the item.
        uint8_t
        color(const uint32_t index)
        const noexcept;

        // Update directory contents.
        bool
        update(void)
        noexcept;

    private:

        ////////////////////////////////////////////////////////////////////////////////////////////
        // Private member variables
        ////////////////////////////////////////////////////////////////////////////////////////////

        // Directory path.
        std::filesystem::path path;

        // Path of the current item.
        std::filesystem::path cache;
};

#endif

// vim: expandtab shiftwidth=4 shiftwidth=4 fdm=marker
